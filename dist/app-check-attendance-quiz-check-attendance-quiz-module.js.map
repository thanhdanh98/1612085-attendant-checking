{"version":3,"sources":["./src/app/check-attendance-quiz/check-attendance-quiz-student/check-attendance-quiz-student.component.html","./src/app/check-attendance-quiz/check-attendance-quiz-teacher/check-attendance-quiz-teacher.component.html","./src/app/check-attendance-quiz/check-attendance-quiz.component.html","./src/app/check-attendance-quiz/check-attendance-quiz-student/check-attendance-quiz-student.component.ts","./src/app/check-attendance-quiz/check-attendance-quiz-teacher/check-attendance-quiz-teacher.component.ts","./src/app/check-attendance-quiz/check-attendance-quiz.component.ts","./src/app/check-attendance-quiz/check-attendance-quiz.module.ts"],"names":[],"mappings":"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","file":"app-check-attendance-quiz-check-attendance-quiz-module.js","sourcesContent":["export default \"<div class=\\\"modal fade\\\" id=\\\"quizModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"vertical-alignment-helper\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg vertical-align-center\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h2 *ngIf=\\\"!is_ended\\\" class=\\\"modal-title pull-right\\\">Question {{current_question_index + 1}} of {{quiz['questions']['length']}}</h2>\\r\\n                    <button *ngIf=\\\"is_ended\\\" class=\\\"modal-title pull-right btn btn-lg btn-primary\\\" (click)=\\\"onReturn()\\\">Return</button>\\r\\n                    <h2 class=\\\"modal-title\\\">{{quiz['title']}} - <ng-container *ngIf=\\\"quiz['type'] == appService.quiz_type.academic.id\\\">{{appService.quiz_type.academic.title}}</ng-container><ng-container *ngIf=\\\"quiz['type'] == appService.quiz_type.miscellaneous.id\\\">{{appService.quiz_type.miscellaneous.title}}</ng-container></h2>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body container-fluid\\\">\\r\\n                    <div *ngIf=\\\"!is_started && !is_ended  && !is_ready\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xs-12 text-center\\\">\\r\\n                            <h2>You joined the quiz. Wait for your teacher to start</h2>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div  *ngIf=\\\"is_started && !is_ended  && !is_ready\\\" class=\\\"container-fluid\\\">\\r\\n                        <ng-container *ngIf=\\\"!is_answered\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <button class=\\\"col-xs-5 btn btn-primary\\\" (click)=\\\"onClickAnswer('A')\\\">\\r\\n                                    <h1>A.</h1>\\r\\n                                </button>\\r\\n                                <button class=\\\"col-xs-5 col-xs-offset-1 btn btn-primary\\\" (click)=\\\"onClickAnswer('B')\\\">\\r\\n                                    <h1>B.</h1>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <button class=\\\"col-xs-5 btn btn-primary\\\" (click)=\\\"onClickAnswer('C')\\\">\\r\\n                                    <h1>C.</h1>\\r\\n                                </button>\\r\\n                                <button class=\\\"col-xs-5 col-xs-offset-1 btn btn-primary\\\" (click)=\\\"onClickAnswer('D')\\\">\\r\\n                                    <h1>D.</h1>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"is_answered\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <button disabled *ngIf=\\\"selected_option == 'a'\\\" class=\\\"col-xs-5 btn btn-success\\\"><h1>A</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option != 'a'\\\" class=\\\"col-xs-5 btn btn-primary\\\"><h1>A</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option == 'b'\\\" class=\\\"col-xs-5 col-xs-offset-1 btn btn-success\\\"><h1>B</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option != 'b'\\\" class=\\\"col-xs-5 col-xs-offset-1 btn btn-primary\\\"><h1>B</h1></button>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <button disabled *ngIf=\\\"selected_option == 'c'\\\" class=\\\"col-xs-5 btn btn-success\\\"><h1>C</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option != 'c'\\\" class=\\\"col-xs-5 btn btn-primary\\\"><h1>C</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option == 'd'\\\" class=\\\"col-xs-5 col-xs-offset-1 btn btn-success\\\"><h1>D</h1></button>\\r\\n                                <button disabled *ngIf=\\\"selected_option != 'd'\\\" class=\\\"col-xs-5 col-xs-offset-1 btn btn-primary\\\"><h1>D</h1></button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!is_started && !is_ended  && is_ready\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <div class=\\\"col-xs-8 col-xs-offset-2\\\">\\r\\n                                <h3>Ready for the next question</h3>\\r\\n                                <div class=\\\"progress\\\" style=\\\"\\\">\\r\\n                                    <div class=\\\"progress-bar progress-bar-success progress-bar-striped active\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': ready_progress + '%' }\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!is_started && is_ended  && !is_ready\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"row text-center\\\">\\r\\n                            <h2>You've finished the quiz</h2>\\r\\n                        </div>\\r\\n                        <div class=\\\"row text-center\\\">\\r\\n                            <h2>Result: {{correct_answers}} out of {{quiz['questions']['length']}}</h2>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"no_answer\\\" class=\\\"row text-center red_text\\\">\\r\\n                            <h2>Your Attendance is not checked. You didn't answer any question.</h2>\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"!no_answer\\\">\\r\\n                            <div *ngIf=\\\"quiz['type'] == appService.quiz_type.academic.id || correct_answers == quiz['questions']['length']\\\" class=\\\"row text-center green_text\\\">\\r\\n                                <h2>Your Attendance is checked</h2>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"quiz['type'] == appService.quiz_type.academic.id && correct_answers < quiz.required_correct_answers\\\" class=\\\"row text-center red_text\\\">\\r\\n                                <h2>Your Attendance is not checked. This quiz requires you to have at least {{quiz.required_correct_answers}} correct answers</h2>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"quiz['type'] == appService.quiz_type.miscellaneous.id && correct_answers != quiz['questions']['length']\\\" class=\\\"row text-center red_text\\\">\\r\\n                                <h2>Your Attendance is not checked. Miscellaneous quiz requires you to be 100% correct to be checked</h2>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                        <div class=\\\"container-fluid\\\">\\r\\n                            <ng-container *ngFor=\\\"let question of this.quiz.questions\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div>\\r\\n                                        <h4 style=\\\"white-space: pre-wrap\\\"><label class=\\\"underline\\\">Q:</label>{{question.text}}</h4>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div><h4 [ngClass]=\\\"{'green_text': question['answers'] == 'a'}\\\">A. {{question.option_a}} <i *ngIf=\\\"question['option_a'] != question['correct_option']\\\" class=\\\"fa fa-times red\\\"></i><i *ngIf=\\\"question['option_a'] == question['correct_option']\\\" class=\\\"fa fa-check green\\\"></i></h4></div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div><h4 [ngClass]=\\\"{'green_text': question['answers'] == 'b'}\\\">B. {{question.option_b}} <i *ngIf=\\\"question['option_b'] != question['correct_option']\\\" class=\\\"fa fa-times red\\\"></i><i *ngIf=\\\"question['option_b'] == question['correct_option']\\\" class=\\\"fa fa-check green\\\"></i></h4></div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div><h4 [ngClass]=\\\"{'green_text': question['answers'] == 'c'}\\\">C. {{question.option_c}} <i *ngIf=\\\"question['option_c'] != question['correct_option']\\\" class=\\\"fa fa-times red\\\"></i><i *ngIf=\\\"question['option_c'] == question['correct_option']\\\" class=\\\"fa fa-check green\\\"></i></h4></div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div><h4 [ngClass]=\\\"{'green_text': question['answers'] == 'd'}\\\">D. {{question.option_d}} <i *ngIf=\\\"question['option_d'] != question['correct_option']\\\" class=\\\"fa fa-times red\\\"></i><i *ngIf=\\\"question['option_d'] == question['correct_option']\\\" class=\\\"fa fa-check green\\\"></i></h4></div>\\r\\n                                </div>\\r\\n                                <hr/>\\r\\n                            </ng-container>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"quizStoppedModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"vertical-alignment-helper\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm vertical-align-center\\\">\\r\\n            <!-- Modal content-->\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">{{stopped_modal_message}}</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer text-center\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"router.navigate(['/dashboard'])\\\">Close</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"enterQuizCodeModal\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"vertical-alignment-helper\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm vertical-align-center\\\">\\r\\n            <!-- Modal content-->\\r\\n            <div class=\\\"modal-content\\\" (keydown)=\\\"keyDownFunction($event)\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h4 class=\\\"modal-title\\\">Enter Quiz Code</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"quiz_code\\\">\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancelCheckQuizCode()\\\">Cancel</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"checkQuizCode()\\\">Submit</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"x_panel\\\">\\r\\n        <div class=\\\"x_title\\\">\\r\\n            <h3>Check Attendance Quiz ({{selected_attendance['course_name']}}-{{selected_attendance['class_name']}})</h3>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"x_content\\\">\\r\\n            <div class=\\\"col-xs-12 form-horizontal\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label col-sm-1 col-xs-6\\\">Quiz type: </label>\\r\\n                    <div class=\\\"col-sm-3 col-xs-6\\\">\\r\\n                        <select class=\\\"form-control\\\" name=\\\"selected_quiz_type\\\" [(ngModel)]=\\\"selected_quiz_type\\\" (ngModelChange)=\\\"onChangeQuizType()\\\">\\r\\n                            <option *ngFor=\\\"let quiz_type of quiz_types\\\" [value]=\\\"quiz_type.id\\\">{{quiz_type.title}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <ng-container *ngIf=\\\"selected_quiz_type == appService.quiz_type.academic.id\\\">\\r\\n                        <label class=\\\"control-label col-sm-2 col-xs-6\\\">Quiz template: </label>\\r\\n                        <div class=\\\"col-sm-3 col-xs-6\\\">\\r\\n                            <select class=\\\"form-control\\\" name=\\\"selected_quiz\\\" [(ngModel)]=\\\"selected_quiz\\\" (ngModelChange)=\\\"onChangeQuiz()\\\">\\r\\n                                <option *ngFor=\\\"let quiz of quizzes\\\" [value]=\\\"quiz.id\\\">{{quiz.title}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        <ng-container *ngIf=\\\"selected_quiz != 0\\\">\\r\\n                            <div class=\\\"col-sm-3 col-xs-6\\\">\\r\\n                                <div class=\\\"checkbox\\\">\\r\\n                                    <label>\\r\\n                                        <input type=\\\"checkbox\\\" name=\\\"is_edit_quiz\\\" [(ngModel)]=\\\"is_edit_quiz\\\"> Edit quiz?\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"selected_quiz_type == appService.quiz_type.miscellaneous.id\\\">\\r\\n                        <div class=\\\"col-sm-1 col-xs-6\\\">\\r\\n                            <ng-template #tolTemplate>\\r\\n                                <div>Miscellaneous Quiz requires students to have 100% correct answers for their attendance to be checked</div>\\r\\n                            </ng-template>\\r\\n                            <i class=\\\"fa fa-question-circle fa-2x\\\" [tooltip]=\\\"tolTemplate\\\" container=\\\"body\\\"></i>\\r\\n                        </div>\\r\\n                        <label class=\\\"control-label col-sm-2 col-xs-4\\\">No. questions: </label>\\r\\n                        <div class=\\\"col-sm-2 col-xs-4\\\">\\r\\n                            <input class=\\\"form-control\\\" name=\\\"number_questions\\\" [(ngModel)]=\\\"number_misc_question\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-3 col-xs-4\\\">\\r\\n                            <button class=\\\"btn btn-primary btn-round\\\" (click)=\\\"generateMiscQuestion()\\\">Generate questions</button>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n                        <textarea autosize class=\\\"form-control only_bottom_border\\\" placeholder=\\\"Quiz title\\\" [(ngModel)]=\\\"quiz.title\\\" style=\\\"font-size: large; resize: none;\\\"></textarea>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-xs-12 col-sm-6\\\">\\r\\n                        <div class=\\\"form-horizontal\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-1 col-xs-offset-2\\\">\\r\\n                                        <div class=\\\"checkbox\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"is_randomize_questions\\\" [(ngModel)]=\\\"quiz.is_randomize_questions\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-8\\\">\\r\\n                                        <h4>Randomimze order of questions</h4>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-xs-1 col-xs-offset-2\\\">\\r\\n                                        <div class=\\\"checkbox\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"is_randomize_answers\\\" [(ngModel)]=\\\"quiz.is_randomize_answers\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-8\\\">\\r\\n                                        <h4>Randomize order of answers</h4>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\" *ngIf=\\\"selected_quiz_type == appService.quiz_type.academic.id\\\">\\r\\n                                    <div class=\\\"col-xs-2 col-xs-offset-1\\\">\\r\\n                                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"required_correct_answers\\\" [(ngModel)]=\\\"quiz.required_correct_answers\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-xs-8\\\">\\r\\n                                        <h4>No. required correct answers</h4>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <ng-container *ngIf=\\\"selected_quiz_type == appService.quiz_type.miscellaneous.id || is_edit_quiz\\\">\\r\\n                        <div *ngFor=\\\"let question of quiz.questions; let i = index;\\\">\\r\\n                            <form class=\\\"form-group well\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-sm-6 col-xs-12\\\">\\r\\n                                        <textarea autosize rows=\\\"2\\\" class=\\\"form-control only_bottom_border\\\" name=\\\"question_title_{{i}}\\\" placeholder=\\\"Question\\\" [(ngModel)]=\\\"question.text\\\" style=\\\"resize: none;\\\" (keydown)=\\\"onTabInTextarea($event)\\\"></textarea>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-4 col-xs-6\\\">\\r\\n                                        <label class=\\\"control-label col-sm-3\\\">Timer: </label>\\r\\n                                        <div class=\\\"col-sm-9\\\">\\r\\n                                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"question.timer\\\" name=\\\"question_timer_{{i}}\\\">\\r\\n                                                <option *ngFor=\\\"let timer of appService.timers\\\" [value]=\\\"timer.value\\\">{{timer.text}}</option>\\r\\n                                            </select>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1\\\" *ngIf=\\\"quiz.questions.length > 1\\\">\\r\\n                                        <button class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveQuestion(i)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1\\\" *ngIf=\\\"i == quiz.questions.length-1\\\">\\r\\n                                        <button class=\\\"btn btn-primary\\\" (click)=\\\"onAddQuestion()\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\r\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_a\\\" placeholder=\\\"Option A\\\" [(ngModel)]=\\\"question.option_a\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1 radio\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_a\\\" [(ngModel)]=\\\"question.correct_option\\\">\\r\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_a == question.correct_option\\\">Correct</p>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\r\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_b\\\" placeholder=\\\"Option B\\\" [(ngModel)]=\\\"question.option_b\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1 radio\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_b\\\" [(ngModel)]=\\\"question.correct_option\\\">\\r\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_b == question.correct_option\\\">Correct</p>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\r\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_c\\\" placeholder=\\\"Option C\\\" [(ngModel)]=\\\"question.option_c\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1 radio\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_c\\\" [(ngModel)]=\\\"question.correct_option\\\">\\r\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_c == question.correct_option\\\">Correct</p>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-4 col-sm-offset-1\\\">\\r\\n                                        <input class=\\\"form-control\\\" name=\\\"question_{{i}}_option_d\\\" placeholder=\\\"Option D\\\" [(ngModel)]=\\\"question.option_d\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1 radio\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"radio\\\" name=\\\"optradio\\\" [value]=\\\"question.option_d\\\" [(ngModel)]=\\\"question.correct_option\\\">\\r\\n                                            <p class=\\\"green_text\\\" *ngIf=\\\"question.option_d == question.correct_option\\\">Correct</p>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"text-center\\\">\\r\\n                        <button class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\r\\n                        <button class=\\\"btn btn-success\\\" (click)=\\\"onPublishQuiz()\\\">Publish</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<check-attendance-quiz-teacher *ngIf=\\\"authService.current_user.role_id == appService.userType.teacher\\\"></check-attendance-quiz-teacher>\\r\\n<check-attendance-quiz-student *ngIf=\\\"authService.current_user.role_id == appService.userType.student\\\"></check-attendance-quiz-student>\\r\\n\"","import { Component, OnInit, OnDestroy,HostListener } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AppService, AttendanceService, AuthService, SocketService, AppConfig, CheckAttendanceService, QuizService } from '../../shared/shared.module';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\ndeclare var jQuery: any;\r\n@Component({\r\n    selector: 'check-attendance-quiz-student',\r\n    templateUrl: './check-attendance-quiz-student.component.html'\r\n})\r\nexport class CheckAttendanceQuizStudentComponent implements OnInit, OnDestroy {\r\n    public stopped_modal_message;\r\n    public apiResult;\r\n    public apiResultMessage;\r\n    public quiz_code_checked = false;\r\n    public quiz_code = '';\r\n    public quiz_id = 0;\r\n    public quiz = {\r\n        questions:[]\r\n    };\r\n    public is_started = false;\r\n    public is_ready = false;\r\n    public is_ended = false;\r\n    public is_answered = false;\r\n    public current_question_index = 0;\r\n    public ready = 0;\r\n    public ready_progress = 0;\r\n    public interval;\r\n    public ready_time = 5;\r\n    public selected_option;\r\n    public correct_answers = 0;\r\n    public no_answer = false;\r\n\r\n    public constructor(public quizService: QuizService, public checkAttendanceService: CheckAttendanceService,\r\n        public appConfig: AppConfig, public socketService: SocketService, public authService: AuthService,\r\n        public attendanceService: AttendanceService, public localStorage: LocalStorageService, public appService: AppService,\r\n        public router: Router) {\r\n    }\r\n    @HostListener('window:unload', ['$event'])\r\n    public onWindowUnload(event: Event) {\r\n       if(!this.is_ended) \r\n           this.socketService.emitEventOnQuittedQuiz({'quiz_code':this.quiz_code,'student_id': this.authService.current_user.id}); \r\n    }\r\n    @HostListener('window:beforeunload', ['$event'])\r\n    public onWindowBeforeUnload(event: Event) {\r\n        return false;\r\n    }\r\n    public ngOnInit() {\r\n        jQuery('#enterQuizCodeModal').modal({ backdrop: 'static', keyboard: false });\r\n    }\r\n    public ngOnDestroy() {\r\n        if(!this.is_ended) \r\n            this.socketService.emitEventOnQuittedQuiz({'quiz_code':this.quiz_code,'student_id': this.authService.current_user.id});\r\n        this.closeSocket();\r\n    }\r\n    public cancelCheckQuizCode() {\r\n        jQuery(\"#enterQuizCodeModal\").modal(\"hide\");\r\n        this.router.navigate(['/dashboard']);\r\n    }\r\n    public keyDownFunction(event) {\r\n      if(event.keyCode == 13) {\r\n        this.checkQuizCode();\r\n      }\r\n    }\r\n    public checkQuizCode() {\r\n        this.quizService.joinQuiz(this.quiz_code).subscribe(result => {\r\n            this.apiResult = result.result;\r\n            this.apiResultMessage = result.message;\r\n            if (this.apiResult == 'success') {\r\n                this.quiz_code_checked = true;\r\n                jQuery(\"#enterQuizCodeModal\").modal(\"hide\");\r\n                setTimeout( () => {\r\n                    jQuery(\"#quizModal\").modal({ backdrop: 'static', keyboard: false });\r\n                },1000);\r\n                this.getQuizDetail();\r\n\r\n                this.socketService.consumeEventOnQuizStopped();\r\n                this.socketService.invokeQuizStopped.subscribe(result => {\r\n                    if (this.quiz_code == result['quiz_code']) {\r\n                        this.closeSocket();\r\n                        jQuery(\"#quizModal\").modal('hide');\r\n                        this.stopped_modal_message = \"Quiz is stopped\";\r\n                        jQuery('#quizStoppedModal').modal({ backdrop: 'static', keyboard: false });\r\n                    }\r\n                });\r\n\r\n                this.socketService.consumeEventOnQuizEnded();\r\n                this.socketService.invokeQuizEnded.subscribe(result => {\r\n                    if (this.quiz_code == result['quiz_code']) {\r\n                        this.is_ended = true;\r\n                        this.is_started = false;\r\n                        this.is_ready = false;\r\n                    }\r\n                });\r\n\r\n                this.socketService.consumeEventOnQuizQuestionReady();\r\n                this.socketService.invokeQuizQuestionReady.subscribe(result => {\r\n                    if (this.quiz_code == result['quiz_code']) {\r\n                        this.ready = 0;\r\n                        this.ready_progress = 0;\r\n                        this.is_ready = true;\r\n                        this.is_started = false;\r\n                        this.interval = setInterval(() => {\r\n                            this.ready++;\r\n                            if(this.ready > this.ready_time){\r\n                                clearInterval(this.interval);\r\n                                this.ready = 0;\r\n                                this.ready_progress = 0;\r\n                            }else{\r\n                                this.ready_progress = this.ready * 20;\r\n                            }\r\n                        }, 1000);\r\n                    }\r\n                });\r\n\r\n                this.socketService.consumeEventOnQuizQuestionLoaded();\r\n                this.socketService.invokeQuizQuestionLoaded.subscribe(result => {\r\n                    console.log(result['quiz_code'] + '==' + this.quiz_code);\r\n                    if (this.quiz_code == result['quiz_code']) {\r\n                        this.is_answered = false;\r\n                        this.is_started = true;\r\n                        this.is_ready = false;\r\n                        this.current_question_index = result['question_index'];\r\n                    }\r\n                });\r\n\r\n                this.socketService.consumeEventOnQuizQuestionEnded();\r\n                this.socketService.invokeQuizQuestionEnded.subscribe(result => {\r\n                    if (this.quiz_code == result['quiz_code']) {\r\n                        this.is_started = false;\r\n                        this.is_ready = true;\r\n                        this.correct_answers = 0;\r\n                        var check_no_answer = 0;\r\n                        for(var i = 0 ; i < this.quiz['questions']['length']; i++){\r\n                            if(this.quiz['questions'][i]['answers'] == 0){\r\n                                check_no_answer++;\r\n                            }else{\r\n                                var selected_answers = this.quiz['questions'][i]['option_' + this.quiz['questions'][i]['answers']];\r\n                                if(this.quiz['questions'][i]['correct_option'] == selected_answers){\r\n                                    this.correct_answers++;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(check_no_answer == this.quiz['questions']['length']){\r\n                            this.no_answer = true;\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.appService.showPNotify(this.apiResult, this.apiResultMessage, 'error');\r\n            }\r\n        }, error => {\r\n            this.appService.showPNotify('failure', \"Server Error! Can't check quiz code\", 'error');\r\n        });\r\n    }\r\n\r\n    public onReturn(){\r\n        jQuery(\"#quizModal\").modal('hide');\r\n        this.router.navigate(['/dashboard']);\r\n    }\r\n    public onClickAnswer(option:string){\r\n        this.selected_option = option.toLowerCase();\r\n        this.is_answered = true;\r\n        this.socketService.emitEventOnAnsweredQuiz({\r\n            'quiz_code':this.quiz_code,\r\n            'question_index': this.current_question_index,\r\n            'option': option.toLowerCase(),\r\n            'student_id': this.authService.current_user.id,\r\n        });\r\n        this.quiz['questions'][this.current_question_index]['answers'] = option.toLowerCase();\r\n    }\r\n\r\n    public closeSocket(){\r\n        this.socketService.stopEventOnQuizStopped();\r\n        this.socketService.stopEventOnQuizEnded();\r\n        this.socketService.stopEventOnQuizQuestionEnded();\r\n        this.socketService.stopEventOnQuizQuestionLoaded();\r\n        this.socketService.stopEventOnQuizQuestionReady();\r\n    }\r\n    public getQuizDetail() {\r\n        this.quizService.getPublishedQuiz(this.quiz_code).subscribe(result => {\r\n            this.apiResult = result.result;\r\n            this.apiResultMessage = result.message;\r\n            if (this.apiResult == 'success') {\r\n                this.quiz = result.quiz;\r\n                for(var i = 0 ; i < this.quiz['questions'].length; i++){\r\n                    this.quiz['questions'][i]['answers'] = 0;\r\n                }\r\n            } else {\r\n                this.appService.showPNotify(this.apiResult, this.apiResultMessage, 'error');\r\n            }\r\n        }, error => {\r\n            this.appService.showPNotify('failure', \"Server Error! Can't get quiz detail\", 'error');\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AppService, QuizService, AttendanceService, AuthService, SocketService, AppConfig, CheckAttendanceService } from '../../shared/shared.module';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\ndeclare var jQuery: any;\r\n@Component({\r\n    selector: 'check-attendance-quiz-teacher',\r\n    templateUrl: './check-attendance-quiz-teacher.component.html'\r\n})\r\nexport class CheckAttendanceQuizTeacherComponent implements OnInit, OnDestroy {\r\n    public stopped_modal_message;\r\n    public constructor(public quizService: QuizService, public location: Location, public checkAttendanceService: CheckAttendanceService,\r\n        public appConfig: AppConfig, public socketService: SocketService,\r\n        public authService: AuthService, public attendanceService: AttendanceService, public localStorage: LocalStorageService, public appService: AppService, public router: Router) {\r\n        socketService.consumeEventOnCheckAttendanceStopped();\r\n        socketService.invokeCheckAttendanceStopped.subscribe(result=>{\r\n            if(this.selected_attendance['course_id'] == result['course_id'] && this.selected_attendance['class_id'] == result['class_id']){  \r\n                this.appService.showPNotify('Info',\"Attendance session is \" + result['message'],'info');\r\n                this.router.navigate(['/dashboard']);\r\n            }\r\n        });\r\n    }\r\n    public is_edit_quiz = false;\r\n    public is_published = false;\r\n    public apiResult;\r\n    public apiResultMessage;\r\n    public selected_attendance = {};\r\n    public quizzes = [];\r\n    public quiz_types = [];\r\n    public selected_quiz = 0;\r\n    public selected_quiz_type = 1;\r\n    public quiz = {\r\n        id: 0,\r\n        code: '',\r\n        is_randomize_questions: true,\r\n        is_randomize_answers: true,\r\n        required_correct_answers: 0,\r\n        type: this.appService.quiz_type.miscellaneous.id,\r\n        title: 'Attendance Quiz',\r\n        questions: [{\r\n            text: '',\r\n            option_a: '',\r\n            option_b: '',\r\n            option_c: '',\r\n            option_d: '',\r\n            correct_option: null,\r\n            timer: 10,\r\n            answers: []\r\n        }]\r\n    };\r\n    public number_misc_question = 3;\r\n    public ngOnDestroy() {\r\n        // this.socketService.stopEventOnQuizAnswered();\r\n        // this.socketService.stopEventOnQuizStopped();\r\n        this.socketService.stopEventOnCheckAttendanceStopped();\r\n    }\r\n    public ngOnInit() {\r\n        if(!this.localStorage.get('selected_attendance')){\r\n            this.router.navigate(['/dashboard']);\r\n        }else{\r\n            this.selected_attendance = this.localStorage.get('selected_attendance');\r\n            this.quiz_types.push(this.appService.quiz_type.miscellaneous);\r\n            this.quiz_types.push(this.appService.quiz_type.academic);\r\n            this.generateMiscQuestion();\r\n        }\r\n    }\r\n    public onAddQuestion() {\r\n        this.quiz.questions.push({\r\n            text: '',\r\n            option_a: '',\r\n            option_b: '',\r\n            option_c: '',\r\n            option_d: '',\r\n            correct_option: null,\r\n            timer: 10,\r\n            answers: []\r\n        });\r\n    }\r\n    public onRemoveQuestion(index: number) {\r\n        for (var i = index; i < this.quiz.questions.length - 1; i++) {\r\n            this.quiz.questions[i].text = this.quiz.questions[i + 1].text;\r\n            this.quiz.questions[i].option_a = this.quiz.questions[i + 1].option_a;\r\n            this.quiz.questions[i].option_b = this.quiz.questions[i + 1].option_b;\r\n            this.quiz.questions[i].option_c = this.quiz.questions[i + 1].option_c;\r\n            this.quiz.questions[i].option_d = this.quiz.questions[i + 1].option_d;\r\n            this.quiz.questions[i].correct_option = this.quiz.questions[i + 1].correct_option;\r\n            this.quiz.questions[i].timer = this.quiz.questions[i + 1].timer;\r\n        }\r\n        this.quiz.questions.pop();\r\n    }\r\n    public onPublishQuiz() {\r\n        var w = window.open(this.appConfig.host + '/quiz/display', '_blank', 'height=720,width=1024,scrollbars=yes,status=0,toolbar=0,menubar=0,location=0');\r\n        this.localStorage.remove('quiz_code');\r\n        this.localStorage.remove('get_published_quiz_error');\r\n        this.quizService.publishQuiz(this.selected_attendance['course_id'], this.selected_attendance['class_id'], this.quiz).subscribe(result => {\r\n            this.apiResult = result.result;\r\n            this.apiResultMessage = result.message;\r\n            if (this.apiResult == 'failure') {\r\n                this.localStorage.set('get_published_quiz_error',this.apiResultMessage);\r\n                w.location.href = this.appConfig.host + '/quiz/display';\r\n                this.appService.showPNotify('failure', this.apiResultMessage, 'error');\r\n            } \r\n            if(result.result == 'success') {\r\n                this.localStorage.set('token',this.authService.token);\r\n                this.localStorage.set('quiz_code',result.quiz_code);\r\n                w.location.href = this.appConfig.host + '/quiz/display';\r\n            }\r\n        }, error => { this.appService.showPNotify('failure', \"Server Error! Can't publish quiz\", 'error'); });\r\n    }\r\n    public onBack() {\r\n        this.location.back();\r\n    }\r\n    public onChangeQuiz(){\r\n        for(var i = 0 ; i < this.quizzes.length; i++){\r\n            if(this.selected_quiz == this.quizzes[i].id){\r\n                this.is_edit_quiz = (this.quizzes[i].id == 0);\r\n                this.quiz.questions = [];\r\n                this.quiz.id = this.quizzes[i].id;\r\n                this.quiz.title = this.quizzes[i].title;\r\n                this.quiz.code = this.quizzes[i].code;\r\n                this.quiz.required_correct_answers = this.quizzes[i].required_correct_answers;\r\n                for(var j = 0; j < this.quizzes[i].questions.length; j++){\r\n                    this.quiz.questions.push({\r\n                        text : this.quizzes[i].questions[j].text,\r\n                        option_a : this.quizzes[i].questions[j].option_a,\r\n                        option_b : this.quizzes[i].questions[j].option_b,\r\n                        option_c : this.quizzes[i].questions[j].option_c,\r\n                        option_d : this.quizzes[i].questions[j].option_d,\r\n                        correct_option : this.quizzes[i].questions[j].correct_option,\r\n                        timer : this.quizzes[i].questions[j].timer,\r\n                        answers: []\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    public onChangeQuizType(){\r\n        if(this.selected_quiz_type == this.appService.quiz_type.academic.id){\r\n            this.getQuizList();\r\n        }else{\r\n            this.generateMiscQuestion();\r\n        }\r\n        this.quiz.type = this.selected_quiz_type;\r\n    }\r\n    public getQuizList(){\r\n        this.quizService.getQuizByCourseAndClass(this.selected_attendance['course_id'], this.selected_attendance['class_id']).subscribe(result=>{\r\n            this.apiResult = result.result;\r\n            this.apiResultMessage = result.message;\r\n            if(this.apiResult == 'failure'){\r\n                this.appService.showPNotify(this.apiResult,this.apiResultMessage,'error');\r\n            }else{\r\n                this.quizzes = [];\r\n                for(var i = 0 ; i < result.quiz_list.length; i++){\r\n                    if(result.quiz_list[i].is_template){\r\n                        this.quizzes.push(result.quiz_list[i]);\r\n                    }\r\n                }\r\n                this.quizzes.unshift({\r\n                    id: 0,\r\n                    code: result.quiz_code,\r\n                    is_randomize_questions: true,\r\n                    is_randomize_answers: true,\r\n                    required_correct_answers: 0,\r\n                    type: 0,\r\n                    title: 'New quiz',\r\n                    questions: [{\r\n                        text: '',\r\n                        option_a: '',\r\n                        option_b: '',\r\n                        option_c: '',\r\n                        option_d: '',\r\n                        correct_option: null,\r\n                        timer: 10,\r\n                        answers: []\r\n                    }]\r\n                });\r\n                this.selected_quiz = this.quizzes[0].id;\r\n                this.onChangeQuiz();\r\n            }\r\n        },error=>{this.appService.showPNotify('failure',\"Server Error! Can't get quiz list\",'error');});\r\n    }\r\n    public generateMiscQuestion(){\r\n        if(this.number_misc_question <= 0){\r\n            this.appService.showPNotify('failure','Number of questions must be greater than 0','error');\r\n        }else{\r\n            this.quizService.getMiscQuestion(this.number_misc_question).subscribe(result=>{\r\n                if(result.result == 'success'){\r\n                    this.quiz.questions = result.questions;\r\n                }else{\r\n                    this.appService.showPNotify('failure',result.message,'error');\r\n                }\r\n            },error=>{this.appService.showPNotify('failure',\"Server Error! Can't get miscellaneous questions\",'error');});\r\n        }        \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { AppService, AttendanceService, AuthService, AppConfig, CheckAttendanceService } from '../shared/shared.module';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\ndeclare var jQuery:any;\r\n@Component({\r\n    selector: 'app-check-attendance-quiz',\r\n    templateUrl: './check-attendance-quiz.component.html'\r\n})\r\nexport class CheckAttendanceQuizComponent implements OnInit {\r\n    public constructor(public checkAttendanceService : CheckAttendanceService,public appConfig: AppConfig ,\r\n        public authService: AuthService, public attendanceService: AttendanceService, public localStorage: LocalStorageService, public appService: AppService, public router: Router) {\r\n\r\n    }\r\n    public ngOnInit() {\r\n        \r\n    }\r\n}\r\n","import { NgModule }       from '@angular/core';\r\nimport { CommonModule }   from '@angular/common';\r\nimport { FormsModule }    from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { CollapseModule } from 'ngx-bootstrap';\r\nimport { CheckAttendanceQuizComponent } from './check-attendance-quiz.component'\r\nimport { CheckAttendanceQuizTeacherComponent } from './check-attendance-quiz-teacher/check-attendance-quiz-teacher.component'\r\nimport { CheckAttendanceQuizStudentComponent } from './check-attendance-quiz-student/check-attendance-quiz-student.component'\r\nimport { TooltipModule } from 'ngx-bootstrap';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport {FileUploadModule} from \"ng2-file-upload\";\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AutosizeModule } from '../shared/module/autosize/autosize.module';\r\nconst Routes: Routes = [\r\n  { path: '',  component: CheckAttendanceQuizComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(Routes),\r\n    CollapseModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    SharedModule,\r\n    TextMaskModule,\r\n    AutosizeModule\r\n  ],\r\n  declarations: [\r\n    CheckAttendanceQuizComponent,\r\n    CheckAttendanceQuizStudentComponent,\r\n    CheckAttendanceQuizTeacherComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class CheckAttendanceQuizModule {}\r\n"],"sourceRoot":"webpack:///"}